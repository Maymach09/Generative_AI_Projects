from agents import test_manager, test_planner, test_scenario_designer, test_case_developer
from crewai import Task
from tools import web_tool


# Define Tasks

assign_review_plan_task = Task(
    description=(
        "Assign the task of generating a test plan based on the software requirements to the Test Planner."
        " Review the test plan generated by the Test Planner for completeness and accuracy."
        "Make modifications as necessary"
    ),
    expected_output='Updated version of test plan.',
    agent=test_manager,
    output_file='reviewed_test_plan.md'
)

test_plan_task = Task(
    description=(
        "Generate a comprehensive test plan based on the provided software requirements."
        " The test plan should include objectives, scope, testing approach, resources,"
        " schedule, and deliverables."
    ),
    expected_output='''
            A detailed test plan document with the following sections:
                1	Introduction:
                    ◦	Purpose: Explain the objectives of the test plan.
                    ◦	Scope: Define what is included and excluded from the testing activities.
                2	Test Strategy:
                    ◦	Approach: Describe the overall strategy for testing, such as types of testing (functional, non-functional), levels of testing (unit, integration, system, acceptance), and techniques used.
                    ◦	Entry and Exit Criteria: Define the conditions that must be met before testing can begin (entry criteria) and when testing is considered complete (exit criteria).
                3	Test Deliverables:
                    ◦	List all documents, reports, and artifacts that will be produced during the testing process (e.g., test cases, test scripts, test logs, defect reports).
                4	Test Environment:
                    ◦	Hardware: Specify the hardware requirements for testing (servers, workstations, mobile devices).
                    ◦	Software: Specify the software requirements (operating systems, databases, browsers, other tools).
                    ◦	Tools: List any testing tools or automation frameworks that will be used.
                5	Testing Schedule:
                    ◦	Provide a timeline for testing activities, including milestones, key dates (start and end dates of each phase), and dependencies on other activities.
                6	Roles and Responsibilities:
                    ◦	Define the roles of team members involved in testing (test manager, testers, developers), along with their responsibilities and authority.
                7	Test Cases:
                    ◦	Detail the specific test cases or scenarios to be executed, including inputs, expected outputs, and any preconditions or assumptions.
                8	Risk and Mitigation:
                    ◦	Identify potential risks to the testing process or the project as a whole. Include a plan for how these risks will be mitigated or managed.
                9	Assumptions and Dependencies:
                    ◦	Document any assumptions made during the test planning phase and dependencies on other teams, resources, or external factors.
                10	Approvals:
                    ◦	Specify who needs to review and approve the test plan before testing can commence (e.g., project manager, stakeholders).
                11	Change Management:
                    ◦	Describe how changes to the test plan will be handled, including the process for updating the plan and communicating changes to stakeholders.
                12	Testing Metrics:
                    ◦	Outline the metrics that will be used to measure the progress and effectiveness of testing (e.g., test coverage, defect density, pass/fail rates).
''',
    agent=test_planner,
)

assign_review_scenario_task = Task(
    description=(
        "Assign the task of developing test scenarios based on the test plan to the Test Scenario Designer."
        " Review the test scenarios generated by Test Scenario Designer for coverage and relevance."
        "Make modifications as necessary."
    ),
    expected_output='Update version of test scenarios in JSON format.',
    agent=test_manager,
    output_file='review_test_scenarios.json'
)

test_scenario_task = Task(
    description=(
        "Develop detailed test scenarios based on the test plan."
        " Each scenario should outline the context and test type."
        " Include positive as well as negative scenarios."
    ),
    expected_output='A list of all the test scenarios.',
    agent=test_scenario_designer,
)

assign_review_case_task = Task(
    description=(
        "Assign the task of writing test cases based on the test scenarios to the Test Case Developer."
        " Review the test cases generated by Test Case Developer for clarity and completeness."
        " Make necessary modifications to the test cases."
    ),
    expected_output='Modified version of the test cases',
    agent=test_manager,
    output_file='review_test_cases.json'
)

test_case_task = Task(
    description=(
        " Use the SerperDevTool to find the best test techniques online."
        " Write specific test cases based on the test scenarios and the test techniques found online."
        " Each test case should include the test steps, expected outcomes, and any dependencies."
    ),
    expected_output='Detailed test cases in the json format with the following key:value pairs: '
                    'Test_Case_Id: Unique id for the test case\n'
                    'Test_Case_Description: Brief description of the test case\n'
                    'Test_Steps: Step by step actions to be performed with each step serialized with numbers\n'
                    'Expected_Result: Expected result for the test step.\n'
                    'Test_Type: Type of the test case for example Functional or Integration or System etc.',
    agent=test_case_developer,
    tools=[web_tool]
)

