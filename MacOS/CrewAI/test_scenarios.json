```json
[
  {
    "id": "1",
    "name": "Successful User Creation",
    "context": "A new user attempts to create an account with valid credentials.",
    "testType": "Positive",
    "steps": [
      "The user navigates to the user registration page.",
      "The user enters a valid username, email address, and password.",
      "The user clicks on the 'Create Account' button."
    ],
    "expectedOutcome": "The user account is successfully created, and the user is redirected to the login page.",
    "requirementLink": "Requirement 1.1.1 - User Registration"
  },
  {
    "id": "2",
    "name": "Invalid User Creation - Existing Username",
    "context": "A new user attempts to create an account with an existing username.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the user registration page.",
      "The user enters an existing username, a valid email address, and a valid password.",
      "The user clicks on the 'Create Account' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the username is already taken.",
    "requirementLink": "Requirement 1.1.1 - User Registration"
  },
  {
    "id": "3",
    "name": "Invalid User Creation - Weak Password",
    "context": "A new user attempts to create an account with a weak password.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the user registration page.",
      "The user enters a valid username, a valid email address, and a weak password (e.g., 'password').",
      "The user clicks on the 'Create Account' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the password is too weak and must meet the specified complexity requirements.",
    "requirementLink": "Requirement 1.1.1 - User Registration"
  },
  {
    "id": "4",
    "name": "Invalid User Creation - Invalid Email Format",
    "context": "A new user attempts to create an account with an invalid email address format.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the user registration page.",
      "The user enters a valid username, an invalid email address (e.g., 'invalid.email'), and a valid password.",
      "The user clicks on the 'Create Account' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the email address is invalid.",
    "requirementLink": "Requirement 1.1.1 - User Registration"
  },
  {
    "id": "5",
    "name": "Successful User Login",
    "context": "A registered user attempts to log in with valid credentials.",
    "testType": "Positive",
    "steps": [
      "The user navigates to the login page.",
      "The user enters a valid username and password.",
      "The user clicks on the 'Login' button."
    ],
    "expectedOutcome": "The user is successfully logged in and redirected to the home page.",
    "requirementLink": "Requirement 1.1.2 - User Login"
  },
  {
    "id": "6",
    "name": "Invalid User Login - Incorrect Username",
    "context": "A registered user attempts to log in with an incorrect username.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the login page.",
      "The user enters an incorrect username and a valid password.",
      "The user clicks on the 'Login' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the username or password is incorrect.",
    "requirementLink": "Requirement 1.1.2 - User Login"
  },
  {
    "id": "7",
    "name": "Invalid User Login - Incorrect Password",
    "context": "A registered user attempts to log in with an incorrect password.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the login page.",
      "The user enters a valid username and an incorrect password.",
      "The user clicks on the 'Login' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the username or password is incorrect.",
    "requirementLink": "Requirement 1.1.2 - User Login"
  },
  {
    "id": "8",
    "name": "Successful Appointment Scheduling",
    "context": "A logged-in user attempts to schedule an appointment with valid details.",
    "testType": "Positive",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a date and time for the appointment.",
      "The user enters the required details for the appointment (e.g., service type, provider, location).",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The appointment is successfully scheduled, and the user receives a confirmation message.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "9",
    "name": "Invalid Appointment Scheduling - Unavailable Date and Time",
    "context": "A logged-in user attempts to schedule an appointment for a date and time that is already booked.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a date and time that is already booked.",
      "The user enters the required details for the appointment.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the selected date and time is unavailable.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "10",
    "name": "Invalid Appointment Scheduling - Invalid Service Type",
    "context": "A logged-in user attempts to schedule an appointment with an invalid service type.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters an invalid service type.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the selected service type is invalid.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "11",
    "name": "Invalid Appointment Scheduling - Unavailable Provider",
    "context": "A logged-in user attempts to schedule an appointment with a provider who is not available at the selected time.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user selects a provider who is not available at the selected time.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the selected provider is not available at the selected time.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "12",
    "name": "Successful Appointment Cancellation",
    "context": "A logged-in user attempts to cancel a scheduled appointment.",
    "testType": "Positive",
    "steps": [
      "The user navigates to the appointment management page.",
      "The user selects the appointment they wish to cancel.",
      "The user clicks on the 'Cancel Appointment' button."
    ],
    "expectedOutcome": "The appointment is successfully canceled, and the user receives a confirmation message.",
    "requirementLink": "Requirement 1.2.2 - Appointment Cancellation"
  },
  {
    "id": "13",
    "name": "Invalid Appointment Cancellation - Appointment Not Found",
    "context": "A logged-in user attempts to cancel an appointment that does not exist.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the appointment management page.",
      "The user enters an invalid appointment ID.",
      "The user clicks on the 'Cancel Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the appointment was not found.",
    "requirementLink": "Requirement 1.2.2 - Appointment Cancellation"
  },
  {
    "id": "14",
    "name": "Successful Appointment Rescheduling",
    "context": "A logged-in user attempts to reschedule a scheduled appointment.",
    "testType": "Positive",
    "steps": [
      "The user navigates to the appointment management page.",
      "The user selects the appointment they wish to reschedule.",
      "The user selects a new date and time for the appointment.",
      "The user clicks on the 'Reschedule Appointment' button."
    ],
    "expectedOutcome": "The appointment is successfully rescheduled, and the user receives a confirmation message.",
    "requirementLink": "Requirement 1.2.3 - Appointment Rescheduling"
  },
  {
    "id": "15",
    "name": "Invalid Appointment Rescheduling - Unavailable Date and Time",
    "context": "A logged-in user attempts to reschedule an appointment to a date and time that is already booked.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the appointment management page.",
      "The user selects the appointment they wish to reschedule.",
      "The user selects a new date and time that is already booked.",
      "The user clicks on the 'Reschedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the selected date and time is unavailable.",
    "requirementLink": "Requirement 1.2.3 - Appointment Rescheduling"
  },
  {
    "id": "16",
    "name": "Successful Appointment Reminder",
    "context": "A logged-in user receives a reminder for a scheduled appointment.",
    "testType": "Positive",
    "steps": [
      "The user schedules an appointment.",
      "The system sends a reminder notification to the user's email address or mobile device a specified time before the appointment."
    ],
    "expectedOutcome": "The user receives a reminder notification for the scheduled appointment.",
    "requirementLink": "Requirement 1.2.4 - Appointment Reminders"
  },
  {
    "id": "17",
    "name": "Successful User Profile Update",
    "context": "A logged-in user attempts to update their profile information.",
    "testType": "Positive",
    "steps": [
      "The user navigates to the user profile page.",
      "The user enters the updated profile information (e.g., name, email address, phone number).",
      "The user clicks on the 'Save Changes' button."
    ],
    "expectedOutcome": "The user's profile information is successfully updated.",
    "requirementLink": "Requirement 1.3.1 - User Profile Management"
  },
  {
    "id": "18",
    "name": "Invalid User Profile Update - Invalid Email Format",
    "context": "A logged-in user attempts to update their profile with an invalid email address format.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the user profile page.",
      "The user enters an invalid email address (e.g., 'invalid.email').",
      "The user clicks on the 'Save Changes' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the email address is invalid.",
    "requirementLink": "Requirement 1.3.1 - User Profile Management"
  },
  {
    "id": "19",
    "name": "Successful User Password Reset",
    "context": "A registered user attempts to reset their password.",
    "testType": "Positive",
    "steps": [
      "The user navigates to the password reset page.",
      "The user enters their email address.",
      "The user clicks on the 'Reset Password' button.",
      "The user receives an email with a password reset link.",
      "The user clicks on the password reset link.",
      "The user enters a new password.",
      "The user confirms the new password.",
      "The user clicks on the 'Save Changes' button."
    ],
    "expectedOutcome": "The user's password is successfully reset.",
    "requirementLink": "Requirement 1.3.2 - Password Reset"
  },
  {
    "id": "20",
    "name": "Invalid User Password Reset - Invalid Email Address",
    "context": "A registered user attempts to reset their password using an invalid email address.",
    "testType": "Negative",
    "steps": [
      "The user navigates to the password reset page.",
      "The user enters an invalid email address.",
      "The user clicks on the 'Reset Password' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the email address is invalid.",
    "requirementLink": "Requirement 1.3.2 - Password Reset"
  },
  {
    "id": "21",
    "name": "Successful User Account Deletion",
    "context": "A logged-in user attempts to delete their account.",
    "testType": "Positive",
    "steps": [
      "The user navigates to the user account settings page.",
      "The user clicks on the 'Delete Account' button.",
      "The user confirms the account deletion."
    ],
    "expectedOutcome": "The user's account is successfully deleted.",
    "requirementLink": "Requirement 1.3.3 - User Account Deletion"
  },
  {
    "id": "22",
    "name": "Successful User Logout",
    "context": "A logged-in user attempts to log out of the system.",
    "testType": "Positive",
    "steps": [
      "The user clicks on the 'Logout' button."
    ],
    "expectedOutcome": "The user is successfully logged out and redirected to the login page.",
    "requirementLink": "Requirement 1.1.3 - User Logout"
  },
  {
    "id": "23",
    "name": "System Outage - Complete Outage",
    "context": "The system experiences a complete outage.",
    "testType": "Edge Case",
    "steps": [
      "The system is unavailable for a period of time."
    ],
    "expectedOutcome": "The system displays an error message indicating that the service is unavailable.",
    "requirementLink": "Requirement 2.1 - System Availability"
  },
  {
    "id": "24",
    "name": "System Outage - Partial Outage",
    "context": "The system experiences a partial outage, affecting specific functionalities.",
    "testType": "Edge Case",
    "steps": [
      "The system experiences a partial outage, affecting the appointment scheduling functionality."
    ],
    "expectedOutcome": "The appointment scheduling feature is unavailable, but other functionalities remain accessible.",
    "requirementLink": "Requirement 2.1 - System Availability"
  },
  {
    "id": "25",
    "name": "Maximum Appointment Duration - Valid Duration",
    "context": "A logged-in user attempts to schedule an appointment with a duration within the maximum allowed limit.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters the maximum allowed appointment duration.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The appointment is successfully scheduled.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "26",
    "name": "Maximum Appointment Duration - Invalid Duration",
    "context": "A logged-in user attempts to schedule an appointment with a duration exceeding the maximum allowed limit.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters a duration exceeding the maximum allowed limit.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the appointment duration exceeds the allowed limit.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "27",
    "name": "Minimum Appointment Duration - Valid Duration",
    "context": "A logged-in user attempts to schedule an appointment with a duration within the minimum allowed limit.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters the minimum allowed appointment duration.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The appointment is successfully scheduled.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "28",
    "name": "Minimum Appointment Duration - Invalid Duration",
    "context": "A logged-in user attempts to schedule an appointment with a duration less than the minimum allowed limit.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters a duration less than the minimum allowed limit.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the appointment duration is too short.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "29",
    "name": "Maximum Number of Attendees - Valid Number",
    "context": "A logged-in user attempts to schedule an appointment with a number of attendees within the maximum allowed limit.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters the maximum allowed number of attendees.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The appointment is successfully scheduled.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "30",
    "name": "Maximum Number of Attendees - Invalid Number",
    "context": "A logged-in user attempts to schedule an appointment with a number of attendees exceeding the maximum allowed limit.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters a number of attendees exceeding the maximum allowed limit.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the number of attendees exceeds the allowed limit.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "31",
    "name": "Minimum Number of Attendees - Valid Number",
    "context": "A logged-in user attempts to schedule an appointment with a number of attendees within the minimum allowed limit.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters the minimum allowed number of attendees.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The appointment is successfully scheduled.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "32",
    "name": "Minimum Number of Attendees - Invalid Number",
    "context": "A logged-in user attempts to schedule an appointment with a number of attendees less than the minimum allowed limit.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters a number of attendees less than the minimum allowed limit.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the number of attendees is too low.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "33",
    "name": "Zero Attendees",
    "context": "A logged-in user attempts to schedule an appointment with zero attendees.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters zero attendees.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that at least one attendee is required.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  },
  {
    "id": "34",
    "name": "Negative Attendees",
    "context": "A logged-in user attempts to schedule an appointment with a negative number of attendees.",
    "testType": "Boundary Value",
    "steps": [
      "The user navigates to the appointment scheduling page.",
      "The user selects a valid date and time.",
      "The user enters a negative number of attendees.",
      "The user clicks on the 'Schedule Appointment' button."
    ],
    "expectedOutcome": "The system displays an error message indicating that the number of attendees cannot be negative.",
    "requirementLink": "Requirement 1.2.1 - Appointment Scheduling"
  }
]
```